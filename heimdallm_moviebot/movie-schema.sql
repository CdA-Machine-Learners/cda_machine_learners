CREATE TABLE "cast" (
	id int4 NOT NULL,
	person_id int4 NOT NULL,
    /* use similarity() > 0.5 for comparison instead of equality against character */
	"character" varchar NOT NULL,
	movie_id int4 NOT NULL,
	CONSTRAINT cast_pk PRIMARY KEY (id)
);

CREATE TABLE people (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"name" varchar NOT NULL,
	CONSTRAINT people_pk PRIMARY KEY (id)
);

CREATE TABLE crew (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE),
	person_id int4 NOT NULL,
	department text NOT NULL,
	job text NOT NULL,
	movie_id int4 NOT NULL,
	CONSTRAINT crew_pk PRIMARY KEY (id)
);

CREATE TABLE movies (
	id int4 NOT NULL,
    /* if `budget` is used for filtering, do not include NULL values */
	budget int8 NULL,
    /* use similarity() > 0.5 for comparison instead of equality against title */
	title varchar NOT NULL,
	imdb varchar NOT NULL,
	release_date date NULL,
    /* if `revenue` is used for filtering, do not include NULL values */
	revenue int8 NULL,
	runtime int4 NOT NULL,
	vote_avg float4 NULL,
	vote_count int4 NOT NULL,
	language_code bpchar(2) NULL,
	tagline varchar NULL,
	description text NULL,
    /* use this column for all full-text search queries. it must be double quoted in the query string. */
	"search" tsvector NULL GENERATED ALWAYS AS ((to_tsvector('english'::regconfig, title::text) || to_tsvector('english'::regconfig, tagline::text)) || to_tsvector('english'::regconfig, description)) STORED,
	access_control bpchar(1) NOT NULL DEFAULT ''::bpchar,
	popularity float4 NOT NULL DEFAULT 0,
	CONSTRAINT movies_pk PRIMARY KEY (id)
);
CREATE INDEX idx_search ON movies USING gin (search);
CREATE INDEX title_trgm_idx ON movies USING gin (title gin_trgm_ops);
